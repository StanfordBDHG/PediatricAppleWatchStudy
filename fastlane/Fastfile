#
# This source file is part of the PAWS application based on the Stanford Spezi Template Application project
#
# SPDX-FileCopyrightText: 2023 Stanford University
#
# SPDX-License-Identifier: MIT
#

default_platform(:ios)

platform :ios do
  before_all do
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "5"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "6"
    ENV["SNAPSHOT_SIMULATOR_WAIT_FOR_BOOT_TIMEOUT"] = "30"
  end

  desc "Build and test"
  lane :test do
    run_tests(
      skip_build: true,
      derived_data_path: ".derivedData",
      code_coverage: true,
      devices: ["iPhone 15 Pro"],
      force_quit_simulator: true,
      reset_simulator: true,
      prelaunch_simulator: false,
      concurrent_workers: 1,
      max_concurrent_simulators: 1,
      result_bundle: true,
      output_directory: ".",
      xcargs: "-skipPackagePluginValidation -skipMacroValidation"
    )
  end

  desc "Screenshots"
  lane :screenshots do
    build
    snapshot(
      test_without_building: true,
      derived_data_path: ".derivedData",
      devices: [
        "iPhone 15 Pro",
        "iPhone SE (3rd generation)"
      ],
      languages: [
         "en-US",
      ],
      scheme: "PAWS",
      output_directory: "./fastlane/.screenshots",
      clear_previous_screenshots: true,
      erase_simulator: true,
      override_status_bar: true,
      concurrent_simulators: false,
      stop_after_first_error: true,
      skip_open_summary: true
    )
  end

  desc "Build app"
  lane :build do
    build_app(
      skip_archive: true,
      skip_codesigning: true,
      derived_data_path: ".derivedData",
      xcargs: "-skipPackagePluginValidation -skipMacroValidation"
    )
  end

  desc "Archive app"
  lane :archive do
    build_app(
      derived_data_path: ".derivedData",
      xcargs: "-skipPackagePluginValidation -skipMacroValidation",
      export_options: {
        provisioningProfiles: {
          "edu.stanford.cs342.2023.paws" => "CS342 2023 PAWS"
        }
      }
    )
  end

  desc "Sign in to the App Store Connect API"
  lane :signin do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_BASE64"],
      is_key_content_base64: true
    )
  end

  desc "Publish a release to TestFlight or the App Store depending on the environment"
  lane :deploy do |options|
    signin
    increment_build_number(
      {
        build_number: latest_testflight_build_number + 1
      }
    )
    archive
    commit = last_git_commit
    
    environment = options[:environment] || "staging"
    
    if environment == "production"
      screenshots
      deliver(
        submit_for_review: true,
        force: true,
        overwrite_screenshots: true,
        automatic_release: true,
        metadata_path: "./fastlane/metadata",
        screenshots_path: "./fastlane/screenshots"
      )
    else
      upload_to_testflight(
        distribute_external: true,
        groups: [
          "External Testers"
        ],
        submit_beta_review: true,
        notify_external_testers: true,
        changelog: commit[:message]
      )
    end
  end
end
